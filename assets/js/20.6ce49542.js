(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{297:function(t,s,n){"use strict";n.r(s);var a=n(38),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mode-and-environment-variables"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mode-and-environment-variables","aria-hidden":"true"}},[t._v("#")]),t._v(" Mode and Environment variables")]),t._v(" "),n("p",[t._v("Take "),n("a",{attrs:{href:"https://cli.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue CLI"),n("OutboundLink")],1),t._v(" as an example, "),n("code",[t._v("mode")]),t._v(" is a very important concept in "),n("a",{attrs:{href:"https://cli.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue CLI"),n("OutboundLink")],1),t._v(": "),n("a",{attrs:{href:"https://cli.vuejs.org/guide/mode-and-env.html#modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("Modes and Environment Variables"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"mode-in-vapper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mode-in-vapper","aria-hidden":"true"}},[t._v("#")]),t._v(" Mode in Vapper")]),t._v(" "),n("p",[t._v("There are only two modes in "),n("code",[t._v("Vapper")]),t._v(", which are "),n("code",[t._v("production")]),t._v(" and "),n("code",[t._v("development")]),t._v(":")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("development")]),t._v(" is used by "),n("code",[t._v("vapper dev")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("production")]),t._v(" is used by "),n("code",[t._v("vapper build")]),t._v("。")])]),t._v(" "),n("p",[t._v("In "),n("router-link",{attrs:{to:"/custom-server.html"}},[t._v("Custom Server")]),t._v(", "),n("code",[t._v("mode")]),t._v(" is used as a parameter of the"),n("code",[t._v("Vapper")]),t._v(" constructor:")],1),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Vapper "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'@vapper/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("starter")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 1. Create a Vapper instance and Vapper will automatically load the configuration file")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vapper "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Vapper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mode"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 2. using the default or from the port and host in the configuration file,")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("//    you can also manually specify the port and host")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    options"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      port"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      host\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" vapper\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 3. Waiting for Vapper setup is complete")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("await")]),t._v(" vapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setup")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 4. Listening")]),t._v("\n  vapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("listen")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" host"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  vapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("info")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Server running at: http://")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("host"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v(":")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v("`")])]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token function"}},[t._v("starter")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"start-the-production-server-correctly"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#start-the-production-server-correctly","aria-hidden":"true"}},[t._v("#")]),t._v(" Start the production server correctly")]),t._v(" "),n("p",[t._v("When customizing "),n("code",[t._v("Server")]),t._v(", we usually have the following script:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token string"}},[t._v('"scripts"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// Local development, start development server")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"dev"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"NODE_ENV=development node ./server/index.js"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// test environment")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"test"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"NODE_ENV=test node ./server/index.js"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// production environment")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"start"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"NODE_ENV=production node ./server/index.js"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("As shown in the script above, we specified "),n("code",[t._v("NODE_ENV=test")]),t._v(" in the"),n("code",[t._v("test")]),t._v(" script, the purpose is to distinguish that our code running in the test environment, and our server code may use the value of "),n("code",[t._v("NODE_ENV")]),t._v(" for environment discrimination, such as distinguishing API domain names in different environments. However, it should be noted that we should properly start the production server. In other words, although "),n("code",[t._v("NODE_ENV=test")]),t._v(", we still need to start the production server in the "),n("code",[t._v("node ./server/index.js")]),t._v(" script, as shown in the highlighted code below:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("div",{staticClass:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("div",{staticClass:"highlighted"},[t._v(" ")]),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Vapper "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("require")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'@vapper/core'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("starter")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 1. Create a Vapper instance and Vapper will automatically load the configuration file")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isProd "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'test'")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" process"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'production'")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vapper "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Vapper")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mode"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" isProd "),n("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'production'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'development'")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 2. using the default or from the port and host in the configuration file,")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("//    you can also manually specify the port and host")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    options"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      port"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      host\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" vapper\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 3. Waiting for Vapper setup is complete")]),t._v("\n  "),n("span",{attrs:{class:"token keyword"}},[t._v("await")]),t._v(" vapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("setup")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 4. Listening")]),t._v("\n  vapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("listen")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" host"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  vapper"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logger"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("info")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[t._v("`Server running at: http://")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("host"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v(":")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{attrs:{class:"token string"}},[t._v("`")])]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token function"}},[t._v("starter")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"the-build-scripts-in-different-environments"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-build-scripts-in-different-environments","aria-hidden":"true"}},[t._v("#")]),t._v(" The build scripts in different environments")]),t._v(" "),n("p",[t._v("There are two steps to deploying a project. First, we need to build the project. After the build is complete, we need to start the production server. Above we explained how to properly start the production server, in this section we will introduce the build process in different environments. Usually we have the following script:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Test environment build")]),t._v("\n  "),n("span",{attrs:{class:"token string"}},[t._v('"build:test"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"vapper build --vueCliMode=test"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Production environment build")]),t._v("\n  "),n("span",{attrs:{class:"token string"}},[t._v('"build"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"vapper build --vueCliMode=production"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("As shown in the code above, we specify the build environment through "),n("code",[t._v("--vueCliMode=xxx")]),t._v(", so what is "),n("code",[t._v("--vueCliMode=xxx")]),t._v("? In fact, "),n("code",[t._v("--vueCliMode=xxx")]),t._v(" specifies the "),n("a",{attrs:{href:"https://cli.vuejs.org/guide/mode-and-env.html#modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue CLI's mode"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("When executing "),n("code",[t._v("npm run build")]),t._v(" or"),n("code",[t._v("yarn build")]),t._v(", it will be as described in "),n("a",{attrs:{href:"https://cli.vuejs.org/guide/mode-and-env.html#modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("Modes and Environment Variables"),n("OutboundLink")],1),t._v(": load the "),n("code",[t._v(".env")]),t._v(" file so that we can assign the corresponding values to the environment variables in the corresponding "),n("code",[t._v(".env")]),t._v(" file:")]),t._v(" "),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("# .env.test")]),t._v("\nNODE_ENV"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("production\nVUE_APP_API_HOST"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("www.foo.com\n")])])]),n("div",{staticClass:"language-sh extra-class"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("# .env.production")]),t._v("\nNODE_ENV"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("production\nVUE_APP_API_HOST"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("www.bar.com\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);